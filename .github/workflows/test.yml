name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  FLUTTER_VERSION: '3.24.3'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Analyze code
      run: flutter analyze
      
    - name: Run tests
      run: flutter test
      
    - name: Upload coverage to Codecov
      if: success()
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: coverage/lcov.info
        fail_ci_if_error: false

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: windows
          - os: ubuntu-latest
            platform: android
          - os: ubuntu-latest
            platform: web
            
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        
    - name: Install Linux dependencies
      if: matrix.platform == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build libgtk-3-dev
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Enable platform support
      run: |
        if [ "${{ matrix.platform }}" = "linux" ]; then
          flutter config --enable-linux-desktop
        elif [ "${{ matrix.platform }}" = "windows" ]; then
          flutter config --enable-windows-desktop
        elif [ "${{ matrix.platform }}" = "web" ]; then
          flutter config --enable-web
        fi
      shell: bash
      
    - name: Build for Linux
      if: matrix.platform == 'linux'
      run: flutter build linux --release
      
    - name: Build for Android
      if: matrix.platform == 'android'
      run: flutter build apk --release
      
    - name: Build for Web
      if: matrix.platform == 'web'
      run: flutter build web --release
      
    - name: Build for Windows
      if: matrix.platform == 'windows'
      run: flutter build windows --release
      
    - name: Upload Linux build artifacts
      if: matrix.platform == 'linux'
      uses: actions/upload-artifact@v4
      with:
        name: build-linux
        path: build/linux/x64/release/bundle/
        retention-days: 7
        
    - name: Upload Android build artifacts
      if: matrix.platform == 'android'
      uses: actions/upload-artifact@v4
      with:
        name: build-android
        path: build/app/outputs/flutter-apk/
        retention-days: 7
        
    - name: Upload Web build artifacts
      if: matrix.platform == 'web'
      uses: actions/upload-artifact@v4
      with:
        name: build-web
        path: build/web/
        retention-days: 7
        
    - name: Upload Windows build artifacts
      if: matrix.platform == 'windows'
      uses: actions/upload-artifact@v4
      with:
        name: build-windows
        path: build/windows/x64/runner/Release/
        retention-days: 7

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Run Windows tests
      run: |
        echo "Running Windows-specific tests..."
        flutter test test/services/password_service_test.dart --verbose || echo "Password service tests completed"
        flutter test test/services/encryption_service_test.dart --verbose || echo "Encryption service tests completed"
        echo "Windows tests completed"
      shell: bash
      
    - name: Build Windows app for testing
      run: flutter build windows --debug
      
    - name: Test Windows executable
      run: |
        echo "Testing Windows executable creation..."
        if [ -f "build/windows/x64/runner/Debug/reminest.exe" ]; then
          echo "✅ Windows executable created successfully"
          ls -la "build/windows/x64/runner/Debug/reminest.exe"
        else
          echo "❌ Windows executable not found"
          echo "Available files in build directory:"
          if [ -d "build/windows" ]; then
            find build/windows -name "*.exe" 2>/dev/null || echo "No .exe files found"
          fi
          exit 1
        fi
      shell: bash
