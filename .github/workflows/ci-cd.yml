name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  FLUTTER_VERSION: '3.32.5'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
      - run: flutter pub get
      - run: dart format --set-exit-if-changed .
      - run: flutter analyze
      - run: flutter test --coverage

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          file: coverage/lcov.info
          fail_ci_if_error: false

  build:
    needs: test
    strategy:
      matrix:
        os-platform:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: windows
          - os: ubuntu-latest
            platform: web
          - os: ubuntu-latest
            platform: android

    runs-on: ${{ matrix.os-platform.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
      - run: flutter pub get
      - name: Install Linux deps
        if: matrix.os-platform.platform == 'linux'
        run: sudo apt-get update && sudo apt-get install -y ninja-build libgtk-3-dev
      - run: flutter config --enable-${{ matrix.os-platform.platform }}-desktop
        if: matrix.os-platform.platform != 'android'
      - run: flutter build ${{ matrix.os-platform.platform }} --release
      - uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os-platform.platform }}
          path: |
            ${{ matrix.os-platform.platform == 'android' && 'build/app/outputs/flutter-apk/' }}
            ${{ matrix.os-platform.platform == 'web' && 'build/web/' }}
            ${{ matrix.os-platform.platform == 'windows' && 'build/windows/x64/runner/Release/' }}
            ${{ matrix.os-platform.platform == 'linux' && 'build/linux/x64/release/bundle/' }}

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - uses: actions/create-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: ${{ github.event.head_commit.message }}
