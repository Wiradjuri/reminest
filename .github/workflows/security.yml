name: Security Analysis

on:
  push:
    branches: [ main, develop, inital ]
  pull_request:
    branches: [ main, develop, inital ]
  schedule:
    # Run security scans weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.5'
        channel: 'stable'

    - name: Install dependencies
      run: flutter pub get

    - name: Run Flutter dependency audit
      run: |
        flutter pub deps --json > dependencies.json
        dart pub global activate dart_dependency_analyzer
        dart pub global run dart_dependency_analyzer:main

    - name: Install Trivy
      run: |
        sudo apt-get update
        sudo apt-get install wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy

    - name: Run Trivy vulnerability scanner
      run: |
        trivy fs --format sarif --output trivy-results.sarif .
        trivy fs --format table .

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: trivy-results.sarif

  code-quality:
    name: Code Quality & Security Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.5'
        channel: 'stable'

    - name: Install dependencies
      run: flutter pub get

    - name: Run Flutter analyzer with security focus
      run: |
        flutter analyze --fatal-infos --fatal-warnings
        
    - name: Install dart_code_metrics
      run: dart pub global activate dart_code_metrics

    - name: Run code metrics analysis
      run: dart pub global run dart_code_metrics:metrics analyze lib

    - name: Install DCM (Dart Code Metrics) for security analysis
      run: |
        dart pub global activate dcm
        dcm analyze lib --reporter=github

  secrets-scan:
    name: Secrets Detection
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

    - name: Run GitLeaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  privacy-audit:
    name: Privacy & Data Security Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.5'
        channel: 'stable'

    - name: Install dependencies
      run: flutter pub get

    - name: Audit data collection patterns
      run: |
        echo "Auditing for data collection patterns..."
        
        # Check for network calls
        echo "Checking for network calls (should be minimal for privacy-first app):"
        grep -r "http" lib/ || echo "✓ No HTTP calls found"
        grep -r "HttpClient" lib/ || echo "✓ No HttpClient usage found"
        grep -r "dio" lib/ || echo "✓ No Dio HTTP client found"
        
        # Check for analytics/tracking
        echo "Checking for analytics or tracking code:"
        grep -r "analytics" lib/ || echo "✓ No analytics found"
        grep -r "tracking" lib/ || echo "✓ No tracking found"
        grep -r "firebase" lib/ || echo "✓ No Firebase found"
        grep -r "crashlytics" lib/ || echo "✓ No Crashlytics found"
        
        # Check for external storage
        echo "Checking for cloud storage services:"
        grep -r "aws" lib/ || echo "✓ No AWS services found"
        grep -r "gcloud" lib/ || echo "✓ No Google Cloud found"
        grep -r "azure" lib/ || echo "✓ No Azure services found"
        
        # Verify local-only storage
        echo "Verifying local storage usage:"
        grep -r "sqflite" lib/ && echo "✓ Local SQLite database found"
        grep -r "flutter_secure_storage" lib/ && echo "✓ Secure local storage found"
        
        # Check encryption implementation
        echo "Verifying encryption usage:"
        grep -r "encrypt" lib/ && echo "✓ Encryption code found"
        grep -r "AES" lib/ && echo "✓ AES encryption found"
        grep -r "pointycastle" lib/ && echo "✓ PointyCastle crypto library found"

    - name: Verify no telemetry in dependencies
      run: |
        echo "Checking dependencies for telemetry/tracking packages..."
        flutter pub deps --json | jq -r '.packages[] | .name' | while read package; do
          case "$package" in
            *analytics*|*tracking*|*telemetry*|*crashlytics*|*sentry*)
              echo "⚠️  Warning: Potential tracking package found: $package"
              exit 1
              ;;
          esac
        done
        echo "✓ No tracking packages found in dependencies"

  encryption-audit:
    name: Encryption & Cryptography Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.5'
        channel: 'stable'

    - name: Install dependencies
      run: flutter pub get

    - name: Audit encryption implementation
      run: |
        echo "Auditing encryption implementation..."
        
        # Check for proper encryption libraries
        echo "Checking for secure crypto libraries:"
        grep -r "pointycastle" pubspec.yaml && echo "✓ PointyCastle crypto library in dependencies"
        
        # Check for weak encryption patterns
        echo "Checking for weak encryption patterns:"
        grep -r "DES\|MD5\|SHA1" lib/ && echo "⚠️  Weak crypto algorithms found" || echo "✓ No weak crypto algorithms found"
        
        # Check for hardcoded keys/passwords
        echo "Checking for hardcoded secrets:"
        grep -r "password.*=" lib/ && echo "⚠️  Potential hardcoded password found" || echo "✓ No hardcoded passwords found"
        grep -r "key.*=" lib/ && echo "ℹ️  Key assignments found (review for hardcoded values)" || echo "✓ No key assignments found"
        
        # Verify proper key generation
        echo "Checking for secure key generation:"
        grep -r "generateRandomKey\|Random\|SecureRandom" lib/ && echo "✓ Key generation code found"
        
        # Check for proper encryption usage
        echo "Checking encryption usage patterns:"
        grep -r "encrypt\|decrypt" lib/ && echo "✓ Encryption/decryption code found"

  compliance-check:
    name: Privacy Compliance Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check privacy policy compliance
      run: |
        echo "Checking privacy compliance indicators..."
        
        # Check README for privacy statements
        grep -i "privacy\|gdpr\|ccpa\|local.*storage\|no.*cloud" README.md && echo "✓ Privacy statements found in README"
        
        # Check for data minimization
        grep -r "collect.*data\|send.*data\|upload.*data" lib/ && echo "⚠️  Data collection code found - review for compliance" || echo "✓ No data collection patterns found"
        
        # Verify consent mechanisms (if any data processing occurs)
        grep -r "consent\|permission\|agree" lib/ || echo "ℹ️  No explicit consent mechanisms found (expected for local-only app)"
        
        echo "Privacy compliance check completed"
